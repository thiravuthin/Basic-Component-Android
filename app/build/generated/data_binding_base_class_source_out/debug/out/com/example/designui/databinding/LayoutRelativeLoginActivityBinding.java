// Generated by view binder compiler. Do not edit!
package com.example.designui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.designui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutRelativeLoginActivityBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnFacebook;

  @NonNull
  public final ImageButton btnGoogle;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final ImageButton btnSwing;

  @NonNull
  public final EditText editTextUsername;

  @NonNull
  public final EditText editTextpassword;

  @NonNull
  public final TextView txtForgotpassword;

  @NonNull
  public final TextView txtLogin;

  @NonNull
  public final TextView txtPassword;

  @NonNull
  public final TextView txtSigUp;

  @NonNull
  public final TextView txtSignup;

  @NonNull
  public final TextView txtUsername;

  private LayoutRelativeLoginActivityBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnFacebook, @NonNull ImageButton btnGoogle, @NonNull Button btnLogin,
      @NonNull ImageButton btnSwing, @NonNull EditText editTextUsername,
      @NonNull EditText editTextpassword, @NonNull TextView txtForgotpassword,
      @NonNull TextView txtLogin, @NonNull TextView txtPassword, @NonNull TextView txtSigUp,
      @NonNull TextView txtSignup, @NonNull TextView txtUsername) {
    this.rootView = rootView;
    this.btnFacebook = btnFacebook;
    this.btnGoogle = btnGoogle;
    this.btnLogin = btnLogin;
    this.btnSwing = btnSwing;
    this.editTextUsername = editTextUsername;
    this.editTextpassword = editTextpassword;
    this.txtForgotpassword = txtForgotpassword;
    this.txtLogin = txtLogin;
    this.txtPassword = txtPassword;
    this.txtSigUp = txtSigUp;
    this.txtSignup = txtSignup;
    this.txtUsername = txtUsername;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutRelativeLoginActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutRelativeLoginActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_relative_login_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutRelativeLoginActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFacebook;
      ImageButton btnFacebook = ViewBindings.findChildViewById(rootView, id);
      if (btnFacebook == null) {
        break missingId;
      }

      id = R.id.btnGoogle;
      ImageButton btnGoogle = ViewBindings.findChildViewById(rootView, id);
      if (btnGoogle == null) {
        break missingId;
      }

      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnSwing;
      ImageButton btnSwing = ViewBindings.findChildViewById(rootView, id);
      if (btnSwing == null) {
        break missingId;
      }

      id = R.id.editTextUsername;
      EditText editTextUsername = ViewBindings.findChildViewById(rootView, id);
      if (editTextUsername == null) {
        break missingId;
      }

      id = R.id.editTextpassword;
      EditText editTextpassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextpassword == null) {
        break missingId;
      }

      id = R.id.txtForgotpassword;
      TextView txtForgotpassword = ViewBindings.findChildViewById(rootView, id);
      if (txtForgotpassword == null) {
        break missingId;
      }

      id = R.id.txtLogin;
      TextView txtLogin = ViewBindings.findChildViewById(rootView, id);
      if (txtLogin == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      TextView txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.txtSigUp;
      TextView txtSigUp = ViewBindings.findChildViewById(rootView, id);
      if (txtSigUp == null) {
        break missingId;
      }

      id = R.id.txtSignup;
      TextView txtSignup = ViewBindings.findChildViewById(rootView, id);
      if (txtSignup == null) {
        break missingId;
      }

      id = R.id.txtUsername;
      TextView txtUsername = ViewBindings.findChildViewById(rootView, id);
      if (txtUsername == null) {
        break missingId;
      }

      return new LayoutRelativeLoginActivityBinding((RelativeLayout) rootView, btnFacebook,
          btnGoogle, btnLogin, btnSwing, editTextUsername, editTextpassword, txtForgotpassword,
          txtLogin, txtPassword, txtSigUp, txtSignup, txtUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
