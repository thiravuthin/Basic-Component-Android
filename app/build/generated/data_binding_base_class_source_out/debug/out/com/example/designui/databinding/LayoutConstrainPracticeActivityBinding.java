// Generated by view binder compiler. Do not edit!
package com.example.designui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.designui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutConstrainPracticeActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSum;

  @NonNull
  public final EditText editText3;

  @NonNull
  public final EditText editText4;

  @NonNull
  public final TextView txtLabel1;

  @NonNull
  public final TextView txtLabel2;

  @NonNull
  public final TextView txtResult;

  private LayoutConstrainPracticeActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnSum, @NonNull EditText editText3, @NonNull EditText editText4,
      @NonNull TextView txtLabel1, @NonNull TextView txtLabel2, @NonNull TextView txtResult) {
    this.rootView = rootView;
    this.btnSum = btnSum;
    this.editText3 = editText3;
    this.editText4 = editText4;
    this.txtLabel1 = txtLabel1;
    this.txtLabel2 = txtLabel2;
    this.txtResult = txtResult;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutConstrainPracticeActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutConstrainPracticeActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_constrain_practice_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutConstrainPracticeActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSum;
      Button btnSum = ViewBindings.findChildViewById(rootView, id);
      if (btnSum == null) {
        break missingId;
      }

      id = R.id.editText3;
      EditText editText3 = ViewBindings.findChildViewById(rootView, id);
      if (editText3 == null) {
        break missingId;
      }

      id = R.id.editText4;
      EditText editText4 = ViewBindings.findChildViewById(rootView, id);
      if (editText4 == null) {
        break missingId;
      }

      id = R.id.txtLabel1;
      TextView txtLabel1 = ViewBindings.findChildViewById(rootView, id);
      if (txtLabel1 == null) {
        break missingId;
      }

      id = R.id.txtLabel2;
      TextView txtLabel2 = ViewBindings.findChildViewById(rootView, id);
      if (txtLabel2 == null) {
        break missingId;
      }

      id = R.id.txtResult;
      TextView txtResult = ViewBindings.findChildViewById(rootView, id);
      if (txtResult == null) {
        break missingId;
      }

      return new LayoutConstrainPracticeActivityBinding((ConstraintLayout) rootView, btnSum,
          editText3, editText4, txtLabel1, txtLabel2, txtResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
